#!/usr/bin/env node

var moo  = require('../'),
    fs   = require('fs'),
    util = require('util');

var parsePath = function (arg) {
  if (typeof arg !== 'string') {
    console.error('invalid input: ' + arg);
  } else if (arg[0] === '/') {
    // already absolute path
    return arg;
  } else if (arg.length >= 2 && arg.substring(0, 2) === '~/') {
    // home path
    return path.join(process.env['HOME'], arg.substring(2));
  } else {
    // relative to current path
    return path.join(process.cwd(), arg);
  }
};

var program = require('commander');

program
    .version('0.3.0')
    .option('-e, --export', 'export rendered HTML only')
    .option('-o, --outdir <dir>', 'path to output exported file(s) to', parsePath)
    .option('-p, --port <port>',
            util.format("server port [default: " + moo.DEFAULT_PORT + "]"),
            parseInt,
            moo.DEFAULT_PORT);

program.parse(process.argv);

if (!program.export) {
  // preview mode
  var args = program.args;
  if (args.length !== 1) {
    console.error("expect one input file");
    process.exit(1);
  }
  if (!fs.existsSync(args[0])) {
    console.error("input file '" + args[0] + "' doesn't exist");
    process.exit(1);
  }
  var server = new moo.Server(args[0]);
  server.listen(program.port);
} else {
  // // export mode
  // if (!args || args.length === 0) {
  //   args = ['-'];
  // }
  // // process each arguments
  // for (var i = 0; i < args.length; i++) {
  //   var arg = args[i], inputPath;
  //   // handle stdin to stdout
  //   if (arg === '-') {
  //     var input = '';
  //     process.stdin.resume();
  //     process.stdin.on('data', function (chunk) {
  //       input += chunk;
  //     });
  //     process.stdin.on('end', function () {
  //       export(input);
  //     })
  //   }
  // }
}



